name: Release

on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write #Â added for provenance

env:
  HUSKY: 0

jobs:
  release:
    name: Release
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Create access token for GitHub App
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_HELPER_APP_ID }}
          private-key: ${{ secrets.RELEASE_HELPER_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: app-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Configure git user for GitHub App
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.app-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'chore: release'
          title: 'chore: release'
          publish: 'pnpm release'
          setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  on-ci-fail:
    name: 'Failure'
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'CI failed. Release won't be executed'
